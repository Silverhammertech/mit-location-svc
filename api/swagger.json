{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "MIT Location API",
    "description": "MIT Location API documentation"
  },
  "tags" : [
    {
      "name" : "diagnostic",
      "description": "For diagnostic purposes"
    },
    {
      "name" : "product",
      "description": "Products"
    },
    {
      "name" : "geolocation",
      "description": "For geolocation purposes"
    },
    {
      "name" : "otherproduct",
      "description": "Other Products"
    }
  ],
  "basePath": "/api/v1",
  "paths": {
    "/info": {
      "get": {
        "tags" : [ "diagnostic" ],
        "summary": "Gets run-time information about this service",
        "description": "Gets run-time information about this service.",
        "produces": [
          "text/plain",
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token containing uaa user scope - the authentication for this user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ProcessInfo"
            }
          }
        }
      }
    },
    "/near": {
      "get": {
        "tags" : [ "geolocation" ],
        "summary": "Gets near locations.",
        "description": "Gets near locations.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "long",
            "in": "query",
            "required": true,
            "description": "longitude",
            "type": "float",
            "minimum": -180,
            "maximum": 180
          },
          {
            "name": "lat",
            "in": "query",
            "required": true,
            "description": "latitude",
            "type": "float",
            "minimum": -90,
            "maximum": 90
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Sort Parameter",
            "type": "string",
            "enum": [
              "type","license_type","state","city","name","distance"
            ],
            "default": "distance"
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "description": "radius in meters",
            "type": "number",
            "default": 1000
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "description": "Sort Order",
            "type": "string",
            "enum": [
              "asc", "desc"
            ],
            "default": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Sort Order",
            "type": "number",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/state/{state-code}": {
      "get": {
        "tags" : [ "geolocation" ],
        "summary": "Gets locations by state.",
        "description": "Gets locations by state.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "state-code",
            "in": "path",
            "required": true,
            "description": "State Code",
            "type": "string"
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "description": "Sort Parameter",
            "type": "string",
            "enum": [
              "type","license_type","state","city","name"
            ],
            "default": "distance"
          },
          {
            "name": "order",
            "in": "query",
            "required": false,
            "description": "Sort Order",
            "type": "string",
            "enum": [
              "asc", "desc"
            ],
            "default": "asc"
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "description": "Sort Order",
            "type": "number",
            "default": 100
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/product": {
      "get": {
        "tags" : [ "product" ],
        "summary": "Gets all products.",
        "description": "Gets all products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/product/hybrid": {
      "get": {
        "tags" : [ "product" ],
        "summary": "Gets hybrid products.",
        "description": "Gets hybrid products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/product/sativa": {
      "get": {
        "tags" : [ "product" ],
        "summary": "Gets sativa products.",
        "description": "Gets sativa products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/product/indica": {
      "get": {
        "tags" : [ "product" ],
        "summary": "Gets indica products.",
        "description": "Gets indica products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets other products.",
        "description": "Gets other products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets other products.",
        "description": "Gets other products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/beverage": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/breakfast": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/brownie": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/candy": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/capsule": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/chocolate": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/condiment": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/cookie": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/cooking": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/frozen": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/snack": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/edible/tincture": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets edible products.",
        "description": "Gets edible products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate/cartridge": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate/ingestible": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate/solvent": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate/solventless": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/other-product/concentrate/terpene": {
      "get": {
        "tags" : [ "otherproduct" ],
        "summary": "Gets concentrate products.",
        "description": "Gets concentrate products.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags" : [ "diagnostic" ],
        "summary": "Validates that the service is running and responding to requests",
        "description": "Validates that the service is running and responding to requests. It will also return the last time data was received.",
        "produces": [
          "application/json",
          "text/plain"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "description": "Bearer token containing uaa user scope - the authentication for this user",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response"
          },
          "404": {
            "description": "Endpoint Not Found",
            "schema": {
              "type": "string"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "ProcessInfo": {
      "type": "object",
      "description": "This is used primarily for debugging so the data returned can change depending on the need. The data given below should be considered the minimum.",
      "properties": {
        "predix-space": {
          "type": "string"
        },
        "instance-no": {
          "type": "integer"
        },
        "uptime": {
          "type": "number"
        },
        "max-go-threads": {
          "type": "integer"
        },
        "bytesUsed": {
          "type": "number"
        },
        "bytesAvail": {
          "type": "number"
        }
      }
    }
  }
}